name: Deploy to ECR and update Argo CI manifest

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v2

      # Get the SHA of the commit
      - name: Get commit SHA
        id: commit_sha
        run: echo "::set-output name=sha::$(echo ${GITHUB_SHA})"

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # Login to ECR
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      # Build the Docker image
      - name: Build, tag, and push image to ECR 
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: isolates
          IMAGE_TAG: ${{ steps.commit_sha.outputs.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.commit_sha.outputs.sha }}

      # Clone the repository containing the Argo CI manifest, update the image tag and push the changes
      - name: Update Argo CI manifest
        run: |
          git clone https://github.com/kofikodie/isolates.git
          cd charts
          cd isolates
          sed -i "s|image: 123456789012.dkr.ecr.eu-west-1.amazonaws.com/isolates:.*|image: 123456789012.dkr.ecr.eu-west-1.amazonaws.com/isolates:${{ steps.commit_sha.outputs.sha }}|g" argo-ci.yaml
          git config --global user.email "
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Update Argo CI manifest"
          git push origin main