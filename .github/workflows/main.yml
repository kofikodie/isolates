name: Deploy to ECR and update Argo CI manifest

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v2

      # Get the SHA of the commit
      - name: Get commit SHA
        id: commit_sha
        run: echo "::set-output name=sha::$(echo ${GITHUB_SHA})"

      # Build the Docker image
      - name: Build the image
        run: |
          docker-compose build -t isolates .
          docker tag isolates:latest 317884193661.dkr.ecr.eu-west-1.amazonaws.com/docker-ecr-repository/isolates:${{ steps.commit_sha.outputs.sha }}

      # Login to ECR
      - name: Login to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          $(aws ecr get-login --no-include-email --region eu-west-1)

      # Push the image to ECR
      - name: Push the image to ECR
        run: |
          docker push 317884193661.dkr.ecr.eu-west-1.amazonaws.com/docker-ecr-repository/isolates:${{ steps.commit_sha.outputs.sha }}

      # Clone the repository containing the Argo CI manifest
      - name: Clone the manifest repository
        uses: actions/checkout@v2
        with:
          repository: kofikodie/local-manifest
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # Update the Argo CI manifest
      - name: Update the Argo CI manifest
        run: |
          cd charts
          sed -i "s|image: .*|image: 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-image:${{ steps.commit_sha.outputs.sha }}|" iso-ds.yaml
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add iso-ds.yaml
          git commit -m "Update Argo CI manifest"

      # Push the updated manifest to the repository
      - name: Push the updated manifest
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
